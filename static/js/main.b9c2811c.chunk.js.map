{"version":3,"sources":["reportWebVitals.js","components/Nav.js","components/About.js","components/Home.js","components/data.js","components/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Nav","state","className","to","Component","About","editor","EditorJS","holder","placeholder","tools","header","Header","paragraph","Paragraph","list","List","embed","Embed","image","SimpleImage","table","Table","data","blocks","type","text","level","onReady","Undo","Home","id","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,sDCcCQ,E,4MAhBXC,MAAQ,G,uDAEJ,OACI,qBAAKC,UAAU,uBAAf,SACI,qBAAIA,UAAU,oBAAd,UACI,oBAAIA,UAAU,GAAd,SAAiB,cAAC,IAAD,CAAMC,GAAG,IAAT,qBACjB,qCACA,oBAAID,UAAU,GAAd,SAAiB,cAAC,IAAD,CAAMC,GAAG,MAAT,kBACjB,qCACA,oBAAID,UAAU,GAAd,SAAiB,cAAC,IAAD,CAAMC,GAAG,UAAT,+B,GAVnBC,aCSHC,E,4MAVXJ,MAAQ,G,uDAEJ,OACI,qBAAKC,UAAU,cAAf,SACI,oBAAIA,UAAU,gBAAd,iC,GALIE,a,gJCcdE,EAAS,IAAIC,IAAS,CACxBC,OAAQ,cACRC,YAAa,aAEbC,MAAO,CACHC,OAAQC,IACRC,UAAWC,IACXC,KAAMC,IACNC,MAAOC,IAEPC,MAAOC,IACPC,MAAOC,KAGXC,KC9BgB,CAChBC,OAAQ,CACN,CACEC,KAAM,SACNF,KAAM,CACJG,KAAM,YACNC,MAAO,IAGX,CACE,KAAS,QACT,KAAS,CACL,IAAQ,qGACR,QAAY,wBACZ,YAAe,EACf,gBAAmB,EACnB,WAAc,MDgBtBC,QAAS,WACL,IAAIC,IAAK,CAAEvB,cAkBJwB,E,4MAZX7B,MAAQ,G,uDAGJ,OACI,sBAAKC,UAAU,sBAAf,UACI,oBAAIA,UAAU,gBAAd,uBACA,qBAAK6B,GAAG,uB,GAPL3B,a,OEhBJ4B,MAhBf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,qBAAK9B,UAAU,aAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO+B,KAAK,IAAIC,OAAK,EAACC,UAAWL,IACjC,cAAC,IAAD,CAAOG,KAAK,MAAMC,OAAK,EAACC,UAAW9B,aCL7C+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BjD,M","file":"static/js/main.b9c2811c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './styles/Nav.css'\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Nav extends Component {\n    state = {  }\n    render() { \n        return (\n            <div className=\"abril-fatface navbar\">\n                <ul className=\"mx-auto nav-links\">\n                    <li className=\"\"><Link to=\"/\">reign</Link></li>\n                    <span>/</span>\n                    <li className=\"\"><Link to=\"/us\">us</Link></li>\n                    <span>/</span>\n                    <li className=\"\"><Link to=\"/demand\">demand</Link></li>\n                </ul>\n            </div>\n        );\n    }\n}\n \nexport default Nav;","import React, { Component } from 'react';\n\nclass About extends Component {\n    state = {  }\n    render() {\n        return (\n            <div className=\"text-center\">\n                <h1 className=\"abril-fatface\">About us page</h1>\n            </div>\n        );\n    }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport { data } from './data';\n\nimport EditorJS from '@editorjs/editorjs';\nimport Header from '@editorjs/header';\n// Use this library instead of '@editorjs/paragraph' because it has alignment\nimport Paragraph from 'editorjs-paragraph-with-alignment';\nimport List from '@editorjs/list';\nimport Embed from '@editorjs/embed';\nimport Image from '@editorjs/image';\nimport SimpleImage from '@editorjs/simple-image';\nimport Table from '@editorjs/table';\n// import AttachesTool from '@editorjs/attaches';\nimport Undo from 'editorjs-undo';\n\n\nconst editor = new EditorJS({ \n    holder: 'write-posts',\n    placeholder: 'Write here',\n    // readOnly: true,\n    tools: {\n        header: Header,\n        paragraph: Paragraph,\n        list: List,\n        embed: Embed,\n        // image: Image,\n        image: SimpleImage,\n        table: Table,\n        // attaches: AttachesTool,\n    },\n    data: data,\n\n    onReady: () => {\n        new Undo({ editor });\n    },\n});\n\n\nclass Home extends Component {\n    state = {  }\n\n    render() {\n        return (\n            <div className=\"content text-center\">\n                <h1 className=\"abril-fatface\">Home page</h1>\n                <div id=\"write-posts\"/>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","export const data = {\n    blocks: [\n      {\n        type: \"header\",\n        data: {\n          text: \"Editor.js\",\n          level: 2\n        }\n      },\n      {\n        \"type\" : \"image\",\n        \"data\" : {\n            \"url\" : \"https://www.tesla.com/tesla_theme/assets/img/_vehicle_redesign/roadster_and_semi/roadster/hero.jpg\",\n            \"caption\" : \"Roadster // tesla.com\",\n            \"withBorder\" : false,\n            \"withBackground\" : false,\n            \"stretched\" : false\n        }\n      },\n    ]\n} \n","import './styles/App.css';\nimport Nav from './Nav';\nimport About from './About';\nimport Home from './Home';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <Nav />\n      <div className=\"main-panel\">\n        <Switch>\n          <Route path=\"/\" exact component={Home}/>\n          <Route path=\"/us\" exact component={About}/>\n          {/* <Route path=\"/us\" exact component={}/> */}\n          {/* <Route path=\"/lyrics\" exact component={Lyrics}/> */}\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}